DROP DATABASE IF EXISTS lynx;
CREATE DATABASE lynx;
USE DATABASE lynx;

-- DROP TABLE IF EXISTS
-- 	link_category, message, link, user, category, domain;

CREATE TABLE domain (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(127) NOT NULL
);

CREATE TABLE category (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(127) NOT NULL
);

CREATE TABLE user (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	displayName VARCHAR(127) NOT NULL,
	email VARCHAR(127) NOT NULL,
	passwordHash CHAR(96) NOT NULL
);

CREATE TABLE link (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	domainId INT UNSIGNED NOT NULL,
	url VARCHAR(2083) NOT NULL,
	title VARCHAR(127),
	description VARCHAR(255),
	imgUrl VARCHAR(2083),

	CONSTRAINT 'fk_link_domain'
		FOREIGN KEY (domainId) REFERENCES domains (domainId)
		ON DELETE CASCADE
		ON UPDATE RESTRICT
);

CREATE TABLE message (
	id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
	linkId INT UNSIGNED NOT NULL,
	senderId INT UNSIGNED NOT NULL,
	recipientId INT UNSIGNED NOT NULL,
	note VARCHAR(511),
	timeSent TIMESTAMP,
	isRead BOOLEAN NOT NULL DEFAULT 0,

	CONSTRAINT 'fk_message_link',
		FOREIGN KEY (linkId) REFERENCES link (id)
		ON DELETE CASCADE
		ON UPDATE RESTRICT

	CONSTRAINT 'fk_message_sender',
		FOREIGN KEY (senderId) REFERENCES user (id)
		ON DELETE CASCADE
		ON UPDATE RESTRICT

	CONSTRAINT 'fk_message_recipient',
		FOREIGN KEY (recipientId) REFERENCES user (id)
		ON DELETE CASCADE
		ON UPDATE RESTRICT
);

CREATE TABLE links_categories (
	linkId INT UNSIGNED NOT NULL,
	categoryId INT UNSIGNED NOT NULL,

	CONSTRAINT 'fk_lc_link'
		FOREIGN KEY (linkId) REFERENCES links (linkId)
		ON DELETE CASCADE
		ON UPDATE RESTRICT

	CONSTRAINT 'fk_lc_category'
		FOREIGN KEY (categoryId) REFERENCES categories (categoryId)
		ON DELETE CASCADE
		ON UPDATE RESTRICT

	PRIMARY KEY (linkId, categoryId)
);